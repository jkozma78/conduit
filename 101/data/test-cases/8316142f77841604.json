{
  "uid" : "8316142f77841604",
  "name" : "test_login",
  "fullName" : "python_tests.test_conduit#test_login",
  "historyId" : "2d27b883ab163515eca2f4f32a9e9234",
  "time" : {
    "start" : 1626953739443,
    "stop" : 1626953751026,
    "duration" : 11583
  },
  "description" : "login with a registered user",
  "descriptionHtml" : "<p>login with a registered user</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0b6a149c38304bcc6ffb6054f20b434d\")>\n\n    def test_login(browser):\n        \"\"\"login with a registered user\"\"\"\n        browser.get('http://localhost:1667/')\n        find_locators(browser, \"login\").click()\n        find_locators(browser, \"Email\").send_keys(\"jani@jani.com\")\n        find_locators(browser, \"Password\").send_keys(\"Jani1234\")\n        find_locators(browser, \"Okbutton\").click()\n>       assert wait_for_element(browser, \"//a[@href='#/@Jani/']\").text == \"Jani\"\n\npython_tests/test_conduit.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npython_tests/test_conduit.py:36: in wait_for_element\n    return WebDriverWait(browser, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0b6a149c38304bcc6ffb6054f20b434d\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7f0ca7b282b0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1626953737676,
      "stop" : 1626953739442,
      "duration" : 1766
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "python_tests"
  }, {
    "name" : "suite",
    "value" : "test_conduit"
  }, {
    "name" : "host",
    "value" : "fv-az83-172"
  }, {
    "name" : "thread",
    "value" : "4136-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "python_tests.test_conduit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "8316142f77841604.json",
  "parameterValues" : [ ]
}