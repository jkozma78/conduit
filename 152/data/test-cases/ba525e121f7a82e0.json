{"uid":"ba525e121f7a82e0","name":"test_new_article","fullName":"python_tests.test_conduit#test_new_article","historyId":"5e7271d4d5b06d7e70eff4f26dcbb4f8","time":{"start":1661014173677,"stop":1661014173677,"duration":0},"description":"create new article with random data used by module RandomData","descriptionHtml":"<p>create new article with random data used by module RandomData</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Missing or invalid capabilities\n  (Driver info: chromedriver=72.0.3626.69 (3c16f8a135abc0d4da2dff33804db79b849a7c38),platform=Linux 5.15.0-1017-azure x86_64)","statusTrace":"@pytest.fixture(scope='session')\n    def browser():\n        \"\"\"init webbrowser with selenium\"\"\"\n        options = Options()\n        options.add_argument('--headless')\n        options.add_argument('--disable-gpu')\n>       driver = webdriver.Chrome(options=options)\n\npython_tests/test_conduit.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py:69: in __init__\n    super().__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py:92: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:270: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:363: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdee29668e0>\nresponse = {'sessionId': 'a07f94b5075e5bbc5062223c5893a5ae', 'status': 33, 'value': {'message': 'session not created: Missing or ... info: chromedriver=72.0.3626.69 (3c16f8a135abc0d4da2dff33804db79b849a7c38),platform=Linux 5.15.0-1017-azure x86_64)'}}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Missing or invalid capabilities\nE         (Driver info: chromedriver=72.0.3626.69 (3c16f8a135abc0d4da2dff33804db79b849a7c38),platform=Linux 5.15.0-1017-azure x86_64)\n\n/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1661014172621,"stop":1661014173136,"duration":515},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Missing or invalid capabilities\n  (Driver info: chromedriver=72.0.3626.69 (3c16f8a135abc0d4da2dff33804db79b849a7c38),platform=Linux 5.15.0-1017-azure x86_64)\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1111, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 890, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/conduit/conduit/python_tests/test_conduit.py\", line 50, in browser\n    driver = webdriver.Chrome(options=options)\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py\", line 69, in __init__\n    super().__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py\", line 92, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 270, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 363, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 428, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[],"labels":[{"name":"parentSuite","value":"python_tests"},{"name":"suite","value":"test_conduit"},{"name":"host","value":"fv-az205-335"},{"name":"thread","value":"3093-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"python_tests.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":26,"unknown":0,"total":30},"items":[{"uid":"b515eb5714912da3","reportUrl":"https://jkozma78.github.io/conduit/151//#testresult/b515eb5714912da3","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1647504233445,"stop":1647504254480,"duration":21035}},{"uid":"467078a23a691ad4","reportUrl":"https://jkozma78.github.io/conduit/150//#testresult/467078a23a691ad4","status":"passed","time":{"start":1628961466331,"stop":1628961466833,"duration":502}},{"uid":"efeda5d42bff84a1","reportUrl":"https://jkozma78.github.io/conduit/149//#testresult/efeda5d42bff84a1","status":"passed","time":{"start":1628418159688,"stop":1628418160193,"duration":505}},{"uid":"9192cda55bfb62d7","reportUrl":"https://jkozma78.github.io/conduit/148//#testresult/9192cda55bfb62d7","status":"passed","time":{"start":1628417676555,"stop":1628417677099,"duration":544}},{"uid":"1a0bc571e835dc6f","reportUrl":"https://jkozma78.github.io/conduit/147//#testresult/1a0bc571e835dc6f","status":"passed","time":{"start":1628417365330,"stop":1628417365948,"duration":618}},{"uid":"3421a9e8e0873617","reportUrl":"https://jkozma78.github.io/conduit/146//#testresult/3421a9e8e0873617","status":"passed","time":{"start":1628416806845,"stop":1628416807304,"duration":459}},{"uid":"b39f3b0f561dd6da","reportUrl":"https://jkozma78.github.io/conduit/146//#testresult/b39f3b0f561dd6da","status":"passed","time":{"start":1628416285514,"stop":1628416286216,"duration":702}},{"uid":"818f8005aa819bed","reportUrl":"https://jkozma78.github.io/conduit/145//#testresult/818f8005aa819bed","status":"passed","time":{"start":1628415715676,"stop":1628415716092,"duration":416}},{"uid":"6d22834a9611802f","reportUrl":"https://jkozma78.github.io/conduit/145//#testresult/6d22834a9611802f","status":"passed","time":{"start":1628415461346,"stop":1628415461797,"duration":451}},{"uid":"5c2db21aa8100f72","reportUrl":"https://jkozma78.github.io/conduit/144//#testresult/5c2db21aa8100f72","status":"passed","time":{"start":1628414751235,"stop":1628414751783,"duration":548}},{"uid":"be24686fd19041db","reportUrl":"https://jkozma78.github.io/conduit/143//#testresult/be24686fd19041db","status":"passed","time":{"start":1628414262211,"stop":1628414262784,"duration":573}},{"uid":"7d73336efbf69205","reportUrl":"https://jkozma78.github.io/conduit/142//#testresult/7d73336efbf69205","status":"passed","time":{"start":1628413284767,"stop":1628413285169,"duration":402}},{"uid":"9e07ff9051d85b8e","reportUrl":"https://jkozma78.github.io/conduit/141//#testresult/9e07ff9051d85b8e","status":"passed","time":{"start":1628412873434,"stop":1628412873984,"duration":550}},{"uid":"e8e5b7b22f2d6fc2","reportUrl":"https://jkozma78.github.io/conduit/140//#testresult/e8e5b7b22f2d6fc2","status":"passed","time":{"start":1628332773144,"stop":1628332778603,"duration":5459}},{"uid":"e026712bd2ec9be5","reportUrl":"https://jkozma78.github.io/conduit/139//#testresult/e026712bd2ec9be5","status":"passed","time":{"start":1628179513808,"stop":1628179514248,"duration":440}},{"uid":"4710d8788a9bfaaa","reportUrl":"https://jkozma78.github.io/conduit/138//#testresult/4710d8788a9bfaaa","status":"passed","time":{"start":1628176328574,"stop":1628176329099,"duration":525}},{"uid":"b2d9fc57fc6d5a0a","reportUrl":"https://jkozma78.github.io/conduit/137//#testresult/b2d9fc57fc6d5a0a","status":"passed","time":{"start":1628175475673,"stop":1628175476164,"duration":491}},{"uid":"e9d5a51fa5c438e6","reportUrl":"https://jkozma78.github.io/conduit/137//#testresult/e9d5a51fa5c438e6","status":"passed","time":{"start":1628174869564,"stop":1628174870080,"duration":516}},{"uid":"e87316ab6dfe30e6","reportUrl":"https://jkozma78.github.io/conduit/136//#testresult/e87316ab6dfe30e6","status":"passed","time":{"start":1628174442392,"stop":1628174442879,"duration":487}},{"uid":"6e9e34e3cf83cbfe","reportUrl":"https://jkozma78.github.io/conduit/135//#testresult/6e9e34e3cf83cbfe","status":"passed","time":{"start":1628173274737,"stop":1628173275243,"duration":506}}]},"tags":[]},"source":"ba525e121f7a82e0.json","parameterValues":[]}